[
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Airballoon GAME\n\nI want to create an airballoon that will float up and down and have 2 obstacles, one being planes passing by and high mountains. I will also have clouds in the background for more detail and a nice gradient of red and orange to represent the timeof day which is sunset.\n\n\n## Planning\n- First draw the airballoon\n- Next draw the background\n- Draw the clouds\n- Draw the mountains\n- draw the planes\n- The planes will be moving from left to right straight ahead vertically\n- The airballoon will automatically fall down by gravity. It needs to be accelerated.\n- When pressing the mouse, the airballoon should stop falling down and instead rise.\n\n\n\n\nLet's start with setting up the Canvas."
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "function setup() {\n  createCanvas(900,700);\n  background(255,255,255);\n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Draw the airballoon\n\nTo draw the airballoon, I want to have a function with a x- and y-coordinate, so I can control the position of it."
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "function airBalloon(x, y) {\n  push();\n    translate(x,y);\n\n    //strings\n    stroke(187,127,74);\n    strokeWeight(2.5);\n    line(x - 45, y + 60, 68, 270);\n    line(x - 35, y + 120, 38, 170);\n    line(x + 50, y + 10, 125, 308);\n    line(x + 50, y + 50, 127, 308);\n\n    //the airballoon\n    fill (255,238,113);\n    noStroke();\n    ellipse (x,y,150,180);\n    \n    //small circle\n    fill(203,156,231);\n    ellipse(x,y,100,180);\n\n    //rectangle under airballoon\n    fill(190,136,42);\n    noStroke();\n    rect(x - 45, y + 120, 89, 50, 3);\n\n  pop();\n}\n\nfunction draw() {\n  background(255,255,255);\n  airBalloon(100,100);  \n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Draw the background\n\nThe background should be a gradient of red and orange color for the sunset sky and have mountains. We want to wrap it into a function, so we can easily reuse it."
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "function scenery() {\n  push();\n  noStroke();\n  fill(\"lightblue\");\n  rect(0, 0, width, height);\n\n  fill(\"green\");\n  rect(0, 200, width, 100);\n  pop();\n}\n\nfunction draw() {\n  scenery();\n  ufo(100, 100);\n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Draw the windmill\n\nNext, we want to draw the windmill. It should be animated and should have different heights and position provided as parameters."
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "function windmill(x, h) {\n  push();\n  const w = h / 3;\n  const y = height - 50;\n  stroke(\"brown\");\n  strokeWeight(4);\n  line(x, y, x + w / 2, y - h);\n  line(x + w, y, x + w / 2, y - h);\n\n  line(x, y - h + 40, x + w, y - h + 40); \n\n  push();\n  translate(x + w / 2, y - h);\n\n  noFill();\n  ellipse(0, 0, 45);\n  line(0, 0, 40, 0);\n  triangle(40, 0, 60, -8, 60, 8);\n\n  rotate(frameCount * 0.02);\n\n  fill(\"brown\");\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  rotate(Math.PI * 0.2);\n  rect(10, -2, 30, 4);\n  pop();\n\n  pop();\n}\n\nfunction draw() {\n  scenery();\n  windmill(200, 100);\n  ufo(100, 100);\n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Make the windmill move\n\nWe want to move the windmill with a specific speed every frame from right to left."
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "let windmillX = 600;\n\nfunction draw() {\n  scenery();\n  windmill(windmillX, 100);\n  ufo(100, 100);\n\n  windmillX = windmillX - 1;\n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Loop the windmill endlessly"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Move the UFO\n\nWe want to add some gravity to make the UFO move down to the earth."
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "let ufoY = 100;\nlet velocity = 1;\nlet acceleration = 0.2;\n\nfunction draw() {\n  scenery();\n  windmill(windmillX, 100);\n  ufo(100, ufoY);\n\n  windmillX = windmillX - 1;\n  ufoY = ufoY + velocity;\n  velocity = velocity + acceleration;\n\n  if (windmillX < -100) {\n    windmillX = width + 100;\n  }\n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Stop the UFO on the ground"
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "let isGameActive = true;\n\nfunction draw() {\n  scenery();\n  windmill(windmillX, 100);\n  ufo(100, ufoY);\n\n  if (isGameActive) {\n    windmillX = windmillX - 1;\n    ufoY = ufoY + velocity;\n    velocity = velocity + acceleration;\n  \n    if (windmillX < -100) {\n      windmillX = width + 100;\n    }\n  \n    if (ufoY > 200) {\n      isGameActive = false;\n    }\n  }\n}"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Move up the UFO on click"
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "acceleration = 0.1;\n\nfunction draw() {\n  scenery();\n  windmill(windmillX, 100);\n  ufo(100, ufoY);\n\n  if (isGameActive) {\n    windmillX = windmillX - 1;\n    ufoY = ufoY + velocity;\n    velocity = velocity + acceleration;\n  \n    if (windmillX < -100) {\n      windmillX = width + 100;\n    }\n\n    if (mouseIsPressed) {\n      velocity = velocity - 0.2;\n    }\n  \n    if (ufoY > 200) {\n      isGameActive = false;\n    }\n  }\n}\n\n/* function mousePressed() {\n  velocity = velocity - 1.6;\n} */"
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Collide the UFO with the windmill"
  },
  {
    "kind": 2,
    "language": "javascript",
    "value": "function draw() {\n  scenery();\n  windmill(windmillX, 100);\n  ufo(100, ufoY);\n\n  if (isGameActive) {\n    windmillX = windmillX - 1;\n    ufoY = ufoY + velocity;\n    velocity = velocity + acceleration;\n  \n    if (windmillX < -100) {\n      windmillX = width + 100;\n    }\n\n    if (mouseIsPressed) {\n      velocity = velocity - 0.2;\n    }\n  \n    if (ufoY > 200) {\n      isGameActive = false;\n    }\n  }\n}"
  }
]